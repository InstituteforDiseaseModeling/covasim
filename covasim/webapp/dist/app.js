!function(t){function e(e){for(var a,n,o=e[0],l=e[1],p=e[2],u=0,c=[];u<o.length;u++)n=o[u],Object.prototype.hasOwnProperty.call(r,n)&&r[n]&&c.push(r[n][0]),r[n]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(t[a]=l[a]);for(h&&h(e);c.length;)c.shift()();return i.push.apply(i,p||[]),s()}function s(){for(var t,e=0;e<i.length;e++){for(var s=i[e],a=!0,o=1;o<s.length;o++){var l=s[o];0!==r[l]&&(a=!1)}a&&(i.splice(e--,1),t=n(n.s=s[0]))}return t}var a={},r={app:0},i=[];function n(e){if(a[e])return a[e].exports;var s=a[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=a,n.d=function(t,e,s){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(s,a,function(e){return t[e]}.bind(null,a));return s},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=e,o=o.slice();for(var p=0;p<o.length;p++)e(o[p]);var h=l;i.push([94,"vendor"]),s()}({71:function(t,e){t.exports=Plotly},94:function(t,e,s){"use strict";s.r(e);s(95);var a=s(23),r=s(160),i=s(162),n=s(159),o=s(158),l=s(163),p=s(161),h=s(164),u=s(165),c=s(29),d=s(37),m=s(71),f=s.n(m);a.default.use(r.a),a.default.use(i.a),a.default.use(n.a),a.default.use(o.a),a.default.use(l.a),a.default.use(p.a),a.default.use(h.a),a.default.use(u.a);const _={props:["graph"],render(t){return t("div",{attrs:{id:this.graph.id}})},mounted(){this.$nextTick((function(){let t=JSON.parse(this.graph.json);t.responsive=!0,f.a.react(this.graph.id,t)}))},updated(){this.$nextTick((function(){let t=JSON.parse(this.graph.json);t.responsive=!0,f.a.react(this.graph.id,t)}))}},g={social_distance:{formTitle:"Social Distancing",fields:[{key:"start",type:"number",label:"Start Day"},{key:"end",type:"number",label:"End Day"},{label:"Effectiveness",key:"level",type:"select",options:[{label:"Aggressive Effectiveness",value:"aggressive"},{label:"Moderate Effectiveness",value:"moderate"},{label:"Mild Effectiveness",value:"mild"}]}],handleSubmit:function(t){return{start:parseInt(t.target.elements.start.value),end:parseInt(t.target.elements.end.value),level:t.target.elements.level.value}}},school_closures:{formTitle:"School Closures",fields:[{key:"start",type:"number",label:"Start Day"},{key:"end",type:"number",label:"End Day"}],handleSubmit:function(t){return{start:parseInt(t.target.elements.start.value),end:parseInt(t.target.elements.end.value)}}},symptomatic_testing:{formTitle:"Symptomatic Testing",fields:[{key:"start",type:"number",label:"Start Day"},{key:"end",type:"number",label:"End Day"},{label:"Accuracy",key:"level",type:"select",options:[{label:"60% Accuracy",value:"60"},{label:"90% Accuracy",value:"90"}]}],handleSubmit:function(t){return{start:parseInt(t.target.elements.start.value),end:parseInt(t.target.elements.end.value),level:parseInt(t.target.elements.level.value)}}},contact_tracing:{formTitle:"Contact Tracing",fields:[{key:"start",type:"number",label:"Start Day"},{key:"end",type:"number",label:"End Day"}],handleSubmit:function(t){return{start:parseInt(t.target.elements.start.value),end:parseInt(t.target.elements.end.value)}}}};function v(){const t=(new Date).getFullYear();let e=[2020];return t>2020&&e.push(t),e.join("-")}var y,b,w=new a.default({el:"#app",components:{"plotly-chart":_},data:()=>({app:{title:"COVASim",version:"Unable to connect to server!",copyright_year:v(),github_url:"https://github.com/institutefordiseasemodeling/covasim"},panel_open:!0,panel_width:null,resizing:!1,history:[],historyIdx:0,sim_length:{best:90,max:180,min:1},sim_pars:{},epi_pars:{},input:{blob:null,remote_file:null},intervention_pars:{},intervention_figs:{},show_animation:!1,result:{graphs:[],summary:{},files:{}},paramError:{},scenarioError:{},interventionTableConfig:g,running:!1,err:"",reset_options:["Example"],reset_choice:"Example"}),async created(){this.get_version(),this.resetPars(),this.watchSimLengthParam()},filters:{to2sf:t=>Number(t).toFixed(2)},computed:{isRunDisabled:function(){return console.log(this.paramError),this.paramError&&Object.keys(this.paramError).length>0}},methods:{async addIntervention(t,e){const s=this.interventionTableConfig[t].handleSubmit(e),a=t,r=this;if(this.intervention_pars[a]||this.$set(this.intervention_pars,a,[]),!s.end||!s.start||s.end<=s.start||this.intervention_pars[a].some(({start:t,end:e})=>t<=s.start&&e>=s.start||t<=s.end&&e>=s.end||s.start<=t&&s.end>=e))return void this.$set(this.scenarioError,t,"Please enter a valid day range");if(s.start>this.sim_length.best||s.end>this.sim_length.best||this.intervention_pars[a].some(({start:t,end:e})=>t>r.sim_length.best||e>r.sim_length.best))return void this.$set(this.scenarioError,t,"Intervention cannot start or end after the campaign duration.");this.$set(this.scenarioError,t,""),this.intervention_pars[a].push(s);const i=this.intervention_pars[a].sort((t,e)=>t.start-e.start);this.$set(this.intervention_pars,a,i);const n=await c.a.rpc("get_gnatt",[this.intervention_pars,this.interventionTableConfig]);this.intervention_figs=n.data},async deleteIntervention(t,e){this.$delete(this.intervention_pars[t],e);const s=await c.a.rpc("get_gnatt",[this.intervention_pars,this.interventionTableConfig]);this.intervention_figs=s.data},open_panel(){this.panel_open=!0},close_panel(){this.panel_open=!1},resize_start(){this.resizing=!0},resize_end(){this.resizing=!1},resize_apply(t){this.resizing&&(t.stopPropagation(),t.preventDefault(),this.panel_width=t.clientX/window.innerWidth*100)},async get_version(){const t=await c.a.rpc("get_version");this.app.version=t.data},async runSim(){this.running=!0,this.err=this.$options.data().err,console.log(this.status),console.log(this.sim_pars,this.epi_pars);try{null===this.input.blob&&(this.input.remote_file=null);const t=await c.a.rpc("run_sim",[this.sim_pars,this.epi_pars,this.intervention_pars,this.input.remote_file,this.show_animation,this.sim_length.best]);this.result.graphs=t.data.graphs,this.result.files=t.data.files,this.result.summary=t.data.summary,this.err=t.data.err,this.panel_open=!!this.err,this.sim_pars=t.data.sim_pars,this.epi_pars=t.data.epi_pars,this.history.push(JSON.parse(JSON.stringify({sim_pars:this.sim_pars,epi_pars:this.epi_pars,result:this.result}))),this.historyIdx=this.history.length-1}catch(t){this.err="Error running model: "+t}this.running=!1},async resetPars(){const t=await c.a.rpc("get_defaults",[this.reset_choice]);this.sim_pars=t.data.sim_pars,this.epi_pars=t.data.epi_pars,this.setupFormWatcher("sim_pars"),this.setupFormWatcher("epi_pars"),this.graphs=[],this.input={blob:null,remote_file:null}},setupFormWatcher(t){const e=this[t];e&&Object.keys(e).forEach(e=>{this.$watch(`${t}.${e}`,this.validateParam(e),{deep:!0})})},watchSimLengthParam(){this.$watch("sim_length",this.validateParam("sim_length"),{deep:!0})},validateParam(t){return e=>{e.best<=e.max&&e.best>=e.min?this.$delete(this.paramError,t):this.$set(this.paramError,t,`Please enter a number between ${e.min} and ${e.max}`)}},async downloadPars(){const t=new Date,e=`COVASim_parameters_${`${t.getFullYear()}-${t.getMonth()}-${t.getDate()}_${t.getHours()}.${t.getMinutes()}.${t.getSeconds()}`}.json`,s={sim_pars:this.sim_pars,epi_pars:this.epi_pars},a=new Blob([JSON.stringify(s,null,4)],{type:"application/json",name:e});Object(d.saveAs)(a,e)},async uploadPars(){try{const t=await c.a.upload("upload_pars");this.sim_pars=t.data.sim_pars,this.epi_pars=t.data.epi_pars,this.graphs=[]}catch(t){c.a.fail(this,"Could not upload parameters",t)}},upload_input_data:(y=function(t){w.input.remote_file=t},function(t){let e=t.target.files;if(e.length>0){const t=new FormData;t.append("uploadfile",e[0]),t.append("funcname","upload_file"),t.append("args",void 0),t.append("kwargs",void 0),fetch("/api/rpcs",{body:t,method:"POST",mode:"cors",credentials:"include"}).then(t=>{if(!t.ok)throw new Error(t.json());return t.text()}).then(t=>{remote_filepath=t.trim().replace(/["]/g,""),y(remote_filepath)}).catch(t=>{b?c.a.fail(this,"Could not upload file.",t):b(t)})}else console.warn("No input file selected.")}),clear_input_data(){this.input={blob:null,remote_file:null}},loadPars(){this.sim_pars=this.history[this.historyIdx].sim_pars,this.epi_pars=this.history[this.historyIdx].epi_pars,this.result=this.history[this.historyIdx].result},async downloadExcel(){const t=await fetch(this.result.files.xlsx.content),e=await t.blob();Object(d.saveAs)(e,this.result.files.xlsx.filename)},async downloadJson(){const t=await fetch(this.result.files.json.content),e=await t.blob();Object(d.saveAs)(e,this.result.files.json.filename)}}})},95:function(t,e,s){var a=s(96);"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,s(15).default)("7ce39bb0",a,!1,{})},96:function(t,e,s){}});
//# sourceMappingURL=app.js.map