!function(t){function e(e){for(var i,r,o=e[0],l=e[1],p=e[2],u=0,c=[];u<o.length;u++)r=o[u],Object.prototype.hasOwnProperty.call(a,r)&&a[r]&&c.push(a[r][0]),a[r]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(t[i]=l[i]);for(h&&h(e);c.length;)c.shift()();return n.push.apply(n,p||[]),s()}function s(){for(var t,e=0;e<n.length;e++){for(var s=n[e],i=!0,o=1;o<s.length;o++){var l=s[o];0!==a[l]&&(i=!1)}i&&(n.splice(e--,1),t=r(r.s=s[0]))}return t}var i={},a={app:0},n=[];function r(e){if(i[e])return i[e].exports;var s=i[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=t,r.c=i,r.d=function(t,e,s){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(s,i,function(e){return t[e]}.bind(null,i));return s},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=e,o=o.slice();for(var p=0;p<o.length;p++)e(o[p]);var h=l;n.push([283,"vendor"]),s()}({283:function(t,e,s){"use strict";s.r(e);s(284),s(651);var i=s(43),a=s(725),n=s(720),r=s(722),o=s(719),l=s(718),p=s(723),h=s(721),u=s(724),c=s(726),d=s(727),_=s(728),f=s(63),m=s(106),g=s(175),v=s.n(g);s(714),s(716);i.default.use(a.a),i.default.use(n.a),i.default.use(r.a),i.default.use(o.a),i.default.use(l.a),i.default.use(p.a),i.default.use(h.a),i.default.use(u.a),i.default.use(c.a),i.default.use(d.a),i.default.use(_.a);const y={props:["graph"],render(t){return t("div",{attrs:{id:this.graph.id}})},mounted(){this.$nextTick((function(){if(this.graph.json){let t=JSON.parse(this.graph.json);t.responsive=!0,v.a.react(this.graph.id,t)}}))},updated(){this.$nextTick((function(){if(this.graph.json){let t=JSON.parse(this.graph.json);t.responsive=!0,v.a.react(this.graph.id,t)}else v.a.purge(this.graph.id)}))}},b={social_distance:{formTitle:"Social Distancing",fields:[{key:"start",type:"number",label:"Start Day"},{key:"end",type:"number",label:"End Day"},{label:"Effectiveness",key:"level",type:"select",options:[{label:"Aggressive Effectiveness",value:"aggressive"},{label:"Moderate Effectiveness",value:"moderate"},{label:"Mild Effectiveness",value:"mild"}]}],handleSubmit:function(t){return{start:parseInt(t.target.elements.start.value),end:parseInt(t.target.elements.end.value),level:t.target.elements.level.value}}},school_closures:{formTitle:"School Closures",fields:[{key:"start",type:"number",label:"Start Day"},{key:"end",type:"number",label:"End Day"}],handleSubmit:function(t){return{start:parseInt(t.target.elements.start.value),end:parseInt(t.target.elements.end.value)}}},symptomatic_testing:{formTitle:"Symptomatic Testing",fields:[{key:"start",type:"number",label:"Start Day"},{key:"end",type:"number",label:"End Day"},{label:"Accuracy",key:"level",type:"select",options:[{label:"60% Accuracy",value:"60"},{label:"90% Accuracy",value:"90"}]}],handleSubmit:function(t){return{start:parseInt(t.target.elements.start.value),end:parseInt(t.target.elements.end.value),level:parseInt(t.target.elements.level.value)}}},contact_tracing:{formTitle:"Contact Tracing",fields:[{key:"start",type:"number",label:"Start Day"},{key:"end",type:"number",label:"End Day"}],handleSubmit:function(t){return{start:parseInt(t.target.elements.start.value),end:parseInt(t.target.elements.end.value)}}}};function w(){const t=(new Date).getFullYear();let e=[2020];return t>2020&&e.push(t),e.join("-")}var S,$,x=new i.default({el:"#app",components:{"plotly-chart":y},data:()=>({debug:!1,app:{title:"Covasim",version:"Unable to connect to server!",copyright_year:w(),github_url:"https://github.com/institutefordiseasemodeling/covasim",org_url:"https://idmod.org",docs_url:"https://institutefordiseasemodeling.github.io/covasim-docs",license:"Loading...",notice:"Loading..."},panel_open:!0,panel_width:null,resizing:!1,history:[],historyIdx:0,sim_length:{},sim_pars:{},epi_pars:{},datafile:{local_path:null,server_path:null},intervention_pars:{},intervention_figs:{},show_animation:!1,result:{graphs:[],summary:{},files:{}},paramError:{},scenarioError:{},interventionTableConfig:b,running:!1,errs:[],reset_options:["Example"],reset_choice:"Example"}),async created(){this.get_version(),this.resetPars(),this.watchSimLengthParam(),this.get_licenses()},filters:{to2sf:t=>Number(t).toFixed(2)},computed:{isRunDisabled:function(){return console.log(this.paramError),this.paramError&&Object.keys(this.paramError).length>0},is_debug:function(){return this.debug||/debug=true/i.test(window.location.search)}},methods:{async addIntervention(t,e){const s=this.interventionTableConfig[t].handleSubmit(e),i=t,a=this;if(this.intervention_pars[i]||this.$set(this.intervention_pars,i,[]),!s.end||!s.start||s.end<=s.start)return void this.$set(this.scenarioError,t,"Please enter a valid day range");if(this.intervention_pars[i].some(({start:t,end:e})=>t<=s.start&&e>=s.start||t<=s.end&&e>=s.end||s.start<=t&&s.end>=e))return void this.$set(this.scenarioError,t,"Interventions of the same type cannot have overlapping day ranges.");if(s.start>this.sim_length.best||s.end>this.sim_length.best||this.intervention_pars[i].some(({start:t,end:e})=>t>a.sim_length.best||e>a.sim_length.best))return void this.$set(this.scenarioError,t,"Intervention cannot start or end after the campaign duration.");this.$set(this.scenarioError,t,""),this.intervention_pars[i].push(s);const n=this.intervention_pars[i].sort((t,e)=>t.start-e.start);this.$set(this.intervention_pars,i,n);const r=await f.a.rpc("get_gantt",void 0,{intervention_pars:this.intervention_pars,intervention_config:this.interventionTableConfig});this.intervention_figs=r.data},async deleteIntervention(t,e){this.$delete(this.intervention_pars[t],e);const s=await f.a.rpc("get_gantt",void 0,{intervention_pars:this.intervention_pars,intervention_config:this.interventionTableConfig});this.intervention_figs=s.data},open_panel(){this.panel_open=!0},close_panel(){this.panel_open=!1},resize_start(){this.resizing=!0},resize_end(){this.resizing=!1},resize_apply(t){this.resizing&&(t.stopPropagation(),t.preventDefault(),this.panel_width=t.clientX/window.innerWidth*100)},async get_version(){const t=await f.a.rpc("get_version");this.app.version=t.data},async get_licenses(){const t=await f.a.rpc("get_licenses");this.app.license=t.data.license,this.app.notice=t.data.notice},async runSim(){this.running=!0,this.errs=this.$options.data().errs,console.log("status:",this.status);try{null===this.datafile.local_path&&this.reset_datafile();const t={sim_pars:this.sim_pars,epi_pars:this.epi_pars,intervention_pars:this.intervention_pars,datafile:this.datafile.server_path,show_animation:this.show_animation,n_days:this.sim_length.best};console.log("run_sim: ",t);const e=await f.a.rpc("run_sim",void 0,t);this.result.graphs=e.data.graphs,this.result.files=e.data.files,this.result.summary=e.data.summary,this.errs=e.data.errs,this.panel_open=this.errs.length>0,this.sim_pars=e.data.sim_pars,this.epi_pars=e.data.epi_pars,this.intervention_pars=e.data.intervention_pars,this.history.push(JSON.parse(JSON.stringify({sim_pars:this.sim_pars,epi_pars:this.epi_pars,intervention_pars:this.intervention_pars,result:this.result}))),this.historyIdx=this.history.length-1}catch(t){this.errs.push({message:"Unable to submit model.",exception:`${t.constructor.name}: ${t.message}`})}this.running=!1},async resetPars(){const t=await f.a.rpc("get_defaults",[this.reset_choice]);this.sim_pars=t.data.sim_pars,this.epi_pars=t.data.epi_pars,this.sim_length={...this.sim_pars.n_days},this.intervention_pars={},this.intervention_figs={},this.setupFormWatcher("sim_pars"),this.setupFormWatcher("epi_pars"),this.graphs=[],this.reset_datafile()},setupFormWatcher(t){const e=this[t];e&&Object.keys(e).forEach(e=>{this.$watch(`${t}.${e}`,this.validateParam(e),{deep:!0})})},watchSimLengthParam(){this.$watch("sim_length",this.validateParam("sim_length"),{deep:!0})},validateParam(t){return e=>{e.best<=e.max&&e.best>=e.min?this.$delete(this.paramError,t):this.$set(this.paramError,t,`Please enter a number between ${e.min} and ${e.max}`)}},async downloadPars(){const t=new Date,e=`covasim_parameters_${`${t.getFullYear()}-${t.getMonth()}-${t.getDate()}_${t.getHours()}.${t.getMinutes()}.${t.getSeconds()}`}.json`,s={sim_pars:this.sim_pars,epi_pars:this.epi_pars,intervention_pars:this.intervention_pars},i=new Blob([JSON.stringify(s,null,4)],{type:"application/json",name:e});Object(m.saveAs)(i,e)},async uploadPars(){try{const t=await f.a.upload("upload_pars");if(this.sim_pars=t.data.sim_pars,this.epi_pars=t.data.epi_pars,this.intervention_pars=t.data.intervention_pars,this.graphs=[],this.intervention_figs={},this.intervention_pars){const t=await f.a.rpc("get_gantt",void 0,{intervention_pars:this.intervention_pars,intervention_config:this.interventionTableConfig});this.intervention_figs=t.data}}catch(t){f.a.fail(this,"Could not upload parameters",t)}},upload_datafile:(S=function(t){x.datafile.server_path=t},function(t){let e=t.target.files;if(e.length>0){const t=new FormData;t.append("uploadfile",e[0]),t.append("funcname","upload_file"),t.append("args",void 0),t.append("kwargs",void 0),fetch("/api/rpcs",{body:t,method:"POST",mode:"cors",credentials:"include"}).then(t=>{if(!t.ok)throw new Error(t.json());return t.text()}).then(t=>{remote_filepath=t.trim().replace(/["]/g,""),S(remote_filepath)}).catch(t=>{$?f.a.fail(this,"Could not upload file.",t):$(t)})}else console.warn("No input file selected.")}),reset_datafile(){this.datafile={local_path:null,server_path:null}},loadPars(){this.sim_pars=this.history[this.historyIdx].sim_pars,this.epi_pars=this.history[this.historyIdx].epi_pars,this.intervention_pars=this.history[this.historyIdx].intervention_pars,this.result=this.history[this.historyIdx].result},async downloadExcel(){const t=await fetch(this.result.files.xlsx.content),e=await t.blob();Object(m.saveAs)(e,this.result.files.xlsx.filename)},async downloadJson(){const t=await fetch(this.result.files.json.content),e=await t.blob();Object(m.saveAs)(e,this.result.files.json.filename)}}})},651:function(t,e,s){var i=s(652);"string"==typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);(0,s(33).default)("7ce39bb0",i,!1,{})},652:function(t,e,s){}});
//# sourceMappingURL=app.js.map