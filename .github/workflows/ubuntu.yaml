name: Covasim CI workflow
on: [pull_request]

jobs:
  summary:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        python-version: ['3.7']
    name: Install and test
    steps:
      - name: Set repo owner env variable
        shell: python
        run: print("::set-env name=GITHUB_OWNER::{}".format('${{github.repository}}'.split('/')[0]))
      - name: Set PYTHONPATH
        run: |
          mkdir -p $HOME/.cache/site-packages
          echo "::set-env name=PYTHONPATH::$HOME/.cache/site-packages"
      - name: Checkout sources
        uses: actions/checkout@v1
      # - name: Checkout synthpops
      #   uses: actions/checkout@v2
      #   with:
      #       repository: ${{ env.GITHUB_OWNER }}/synthpops
      #       token: ${{ secrets.GitHub_PAT }}
      #       path: ./synthpops
      - uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Cache Packages
        id: cache-packages
        uses: actions/cache@v1
        with:
          path: ~/.cache/ # This path is specific to Ubuntu
          # Look to see if there is a cache hit for the corresponding requirements file
          key: packages-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            packages-${{ runner.os }}-${{ matrix.python-version }}-
      # Pip install first will make setup.py much faster and the cache will make pip install fast
      - name: Install Covasim
        run: |
          python setup.py develop --install-dir ~/.cache/site-packages
      # - name: Install synthpops
      #   working-directory: ./synthpops
      #   run: python setup.py develop
      - name: Run Sim
        working-directory: ./tests
        run: |
          python examples/run_sim.py
      - name: Upload test results
        uses: actions/upload-artifact@v2-preview
        with:
          name: results
          path: ./results/*

  install_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        python-version: ['3.7']
    name: Install and test
    steps:
      - name: Set repo owner env variable
        shell: python
        run: print("::set-env name=GITHUB_OWNER::{}".format('${{github.repository}}'.split('/')[0]))
      - name: Set PYTHONPATH
        run: |
          mkdir -p $HOME/.cache/site-packages
          echo "::set-env name=PYTHONPATH::$HOME/.cache/site-packages"
      - name: Checkout sources
        uses: actions/checkout@v1
      # - name: Checkout synthpops
      #   uses: actions/checkout@v2
      #   with:
      #       repository: ${{ env.GITHUB_OWNER }}/synthpops
      #       token: ${{ secrets.GitHub_PAT }}
      #       path: ./synthpops
      - uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Cache Packages
        id: cache-packages
        uses: actions/cache@v1
        with:
          path: ~/.cache/ # This path is specific to Ubuntu
          # Look to see if there is a cache hit for the corresponding requirements file
          key: packages-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            packages-${{ runner.os }}-${{ matrix.python-version }}-
      # Pip install first will make setup.py much faster and the cache will make pip install fast
      - name: Install Covasim
        run: |
          python setup.py develop --install-dir ~/.cache/site-packages
      # - name: Install synthpops
      #   working-directory: ./synthpops
      #   run: python setup.py develop
      - name: Run tests
        working-directory: ./tests
        run: |
          pip install pytest
          pytest test*.py unittests/test*.py --junitxml=test-results.xml --durations=0 # Run actual tests
          # pytest test*.py --junitxml=test-results.xml --durations=0 # Run actual tests -- use this line instead if unit tests are broken
      - name: Run examples
        working-directory: ./examples
        run: python *.py
      - name: Run cruise ship
        working-directory: ./covasim/cruise_ship
        run: python test*.py
      - name: Upload test results
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test_results
          path: tests/test-results.xml
